[tox]
envlist = pytest, pylint, mypy, black, isort, nbmake, ochrona, bandit, pip-audit
isolated_build = true
package_name = qstone

[testenv]
passenv = SSH_AUTH_SOCK, SSH_AGENT_PID, HOME
extras = test
commands =
    pytest --cov qstone --cov-report term-missing --cov-fail-under=70 tests examples/node/tests {posargs}

[testenv:pytest]

[testenv:pytest-all]
passenv = SSH_AUTH_SOCK, SSH_AGENT_PID, HOME
extras = test
commands =
    pytest --cov qstone --cov-report term-missing --junitxml testreport.xml --cov-report xml:coverage.xml --cov-fail-under=70 {posargs}

[testenv:pylint]
extras = lint
commands =
    pylint --fail-under=9.5 qstone {posargs}

[testenv:black]
extras = lint
commands =
    black qstone {posargs}

[testenv:isort]
extras = lint
commands =
    isort --profile black qstone/ {posargs}

[testenv:mypy]
extras = lint
commands =
    mypy qstone/ --ignore-missing-imports --disable-error-code=import-untyped {posargs}

[testenv:clean]
allowlist_externals = rm
skipsdist = true
skip_install = true
ignore_outcome = true
commands =
    rm -r testreport.xml \
    coverage.xml \
    pylint.log \
    mypy.xml \
    pycodestyle.log \
    sphinx_build.log \
    docs/html \
    licenses.confluence \
    licenses.csv

[testenv:ochrona]
allowlist_externals = bash
extras = security
commands =
	bash -c 'pip freeze | ochrona {posargs}'

[testenv:pip-audit]
allowlist_externals = bash
extras = security
commands =
	bash -c 'pip freeze | pip-audit {posargs}'

[testenv:bandit]
allowlist_externals = bash
extras = security
commands =
	bash -c 'bandit -r qstone/ -n 3 -lll {posargs}'
